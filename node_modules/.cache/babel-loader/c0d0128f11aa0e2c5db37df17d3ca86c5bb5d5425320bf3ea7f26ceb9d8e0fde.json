{"ast":null,"code":"var _jsxFileName = \"/Users/ssuresh/Desktop/Bingo/buzzword-bingo/src/BuzzwordBingo.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport BuzzwordBoard from './BuzzwordBoard';\nimport styled from 'styled-components';\nimport Button from './Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SecondHalf = styled.div`\n    width: 55%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`;\n_c = SecondHalf;\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.8);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 999;\n`;\n_c2 = Overlay;\nconst CongratsMessage = styled.h2`\n  color: #fff;\n  font-size: 24px;\n  text-align: center;\n`;\n_c3 = CongratsMessage;\nconst BuzzwordBingo = _ref => {\n  _s();\n  let {\n    buzzwords,\n    numrows,\n    numcols\n  } = _ref;\n  const [markedCells, setMarkedCells] = useState(new Array(25).fill(false));\n  const [isBingo, setIsBingo] = useState(false);\n  const handleCellClick = index => {\n    if (markedCells[index]) {\n      // Cell is already marked, do nothing\n      return;\n    }\n\n    // Mark the cell as selected\n    setMarkedCells(prev => [...prev.slice(0, index), true, ...prev.slice(index + 1)]);\n  };\n  const handleReset = () => {\n    setMarkedCells(Array(numcols * numrows).fill(false));\n    setIsBingo(false);\n  };\n  return /*#__PURE__*/_jsxDEV(SecondHalf, {\n    children: [/*#__PURE__*/_jsxDEV(BuzzwordBoard, {\n      buzzwords: buzzwords,\n      markedCells: markedCells,\n      handleCellClick: handleCellClick,\n      numcols: numcols,\n      numrows: numrows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), isBingo && /*#__PURE__*/_jsxDEV(Overlay, {\n      children: [/*#__PURE__*/_jsxDEV(CongratsMessage, {\n        children: \"Congratulations! You have a Bingo!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n};\n_s(BuzzwordBingo, \"USe2KKLG6pVnCG+ODJcVTXBspi8=\");\n_c4 = BuzzwordBingo;\nexport default BuzzwordBingo;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"SecondHalf\");\n$RefreshReg$(_c2, \"Overlay\");\n$RefreshReg$(_c3, \"CongratsMessage\");\n$RefreshReg$(_c4, \"BuzzwordBingo\");","map":{"version":3,"names":["React","useState","BuzzwordBoard","styled","Button","jsxDEV","_jsxDEV","SecondHalf","div","_c","Overlay","_c2","CongratsMessage","h2","_c3","BuzzwordBingo","_ref","_s","buzzwords","numrows","numcols","markedCells","setMarkedCells","Array","fill","isBingo","setIsBingo","handleCellClick","index","prev","slice","handleReset","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c4","$RefreshReg$"],"sources":["/Users/ssuresh/Desktop/Bingo/buzzword-bingo/src/BuzzwordBingo.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport BuzzwordBoard from './BuzzwordBoard';\nimport styled from 'styled-components';\nimport Button from './Button';\n\ninterface BuzzwordBingoProps {\n    buzzwords: Array<string>,\n    numrows: number,\n    numcols: number,\n}\n\nconst SecondHalf = styled.div`\n    width: 55%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n`;\n\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.8);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 999;\n`;\n\nconst CongratsMessage = styled.h2`\n  color: #fff;\n  font-size: 24px;\n  text-align: center;\n`;\n\nconst BuzzwordBingo: React.FC<BuzzwordBingoProps> = ({\n    buzzwords,\n    numrows,\n    numcols,\n}) => {\n    const [markedCells, setMarkedCells] = useState<boolean[]>(new Array(25).fill(false));\n    const [isBingo, setIsBingo] = useState(false);\n    const handleCellClick = (index: number) => {\n        if (markedCells[index]) {\n            // Cell is already marked, do nothing\n            return;\n        }\n\n        // Mark the cell as selected\n        setMarkedCells(prev => [...prev.slice(0, index), true, ...prev.slice(index + 1)]);\n    };\n\n    const handleReset = () => {\n        setMarkedCells(Array(numcols * numrows).fill(false));\n        setIsBingo(false);\n    };\n\n    return (\n        <SecondHalf>\n            <BuzzwordBoard\n                buzzwords={buzzwords}\n                markedCells={markedCells}\n                handleCellClick={handleCellClick}\n                numcols={numcols}\n                numrows={numrows}\n            />\n            {isBingo && (\n                <Overlay>\n                    <CongratsMessage>Congratulations! You have a Bingo!</CongratsMessage>\n                    <Button onClick={handleReset}>Reset</Button>\n                </Overlay>\n            )}\n        </SecondHalf>\n    );\n};\n\n\nexport default BuzzwordBingo;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}