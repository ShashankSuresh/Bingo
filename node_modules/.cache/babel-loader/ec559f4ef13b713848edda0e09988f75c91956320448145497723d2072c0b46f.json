{"ast":null,"code":"var _jsxFileName = \"/Users/ssuresh/Desktop/Bingo/buzzword-bingo/src/pages/BuzzwordBoard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport BuzzwordCell from './BuzzwordCell';\nimport BingoCelebration from '../assets/images/bingo.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n// const BuzzwordBoardContainer = styled.div`\n//   display: flex;\n//   justify-content: center;\n// `;\nconst BoardGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => props.numcols}, 1fr);\n  // max-width: 500px;\n  margin: 0 auto;\n  text-align: center;\n`;\n_c = BoardGrid;\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: var(--color-opacility-dark);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 999;\n  opacity: ${_ref => {\n  let {\n    show\n  } = _ref;\n  return show ? 1 : 0;\n}};\n  transition: opacity 0.5s ease-in-out;\n\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n\n  ${props => !props.show && `\n    display: none;\n  `}\n`;\n_c2 = Overlay;\nconst CongratsMessage = styled.h2`\n  color: var(--color-background);\n  font-size: var(--font-size-mega);\n  text-align: center;\n`;\n_c3 = CongratsMessage;\nconst BuzzwordBoard = _ref2 => {\n  _s();\n  let {\n    numcols,\n    numrows,\n    buzzwords,\n    markedCells,\n    handleCellClick\n  } = _ref2;\n  const [isBingo, setIsBingo] = useState(false);\n  const isCenterCell = (row, col) => row === Math.floor(numrows / 2) && col === Math.floor(numcols / 2);\n  const isLeftDiagonalCell = (row, col) => row === col;\n  const isRightDiagonalCell = (row, col) => row + col === numcols - 1;\n  const isRowHighlighted = row => Array.from({\n    length: numcols\n  }, (_, col) => markedCells[row * numcols + col]).every(Boolean);\n  const isColHighlighted = col => Array.from({\n    length: numrows\n  }, (_, row) => markedCells[row * numcols + col]).every(Boolean);\n  const isDiagonalHighlighted = (row, col) => {\n    if (isCenterCell(row, col)) return false;\n    if (isLeftDiagonalCell(row, col)) return Array.from({\n      length: numrows\n    }, (_, i) => markedCells[i * numcols + i]).every(Boolean);\n    if (isRightDiagonalCell(row, col)) return Array.from({\n      length: numrows\n    }, (_, i) => markedCells[i * numcols + (numcols - 1 - i)]).every(Boolean);\n    return false;\n  };\n  useEffect(() => {\n    if (isBingo) {\n      const timer = setTimeout(() => {\n        setIsBingo(false);\n      }, 2200);\n      return () => clearTimeout(timer);\n    }\n  }, [isBingo]);\n  const Header = styled.h1`\n  font-size: var(--font-size-mega);\n  text-align: center;\n`;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"              \", /*#__PURE__*/_jsxDEV(Header, {\n      children: [\"Buzzword\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this), \"Bingo\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(BoardGrid, {\n      numcols: numcols,\n      children: buzzwords.map((buzzword, index) => {\n        const row = Math.floor(index / numcols);\n        const col = index % numcols;\n        const ishighlighted = isRowHighlighted(row) || isColHighlighted(col) || isDiagonalHighlighted(row, col);\n        return /*#__PURE__*/_jsxDEV(BuzzwordCell, {\n          value: buzzword,\n          ismarked: markedCells[index],\n          ishighlighted: ishighlighted,\n          onClick: () => handleCellClick(index),\n          setIsBingo: setIsBingo\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Overlay, {\n      show: isBingo,\n      children: /*#__PURE__*/_jsxDEV(CongratsMessage, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          width: 220,\n          height: 220,\n          src: BingoCelebration,\n          alt: \"bingo-celebration\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 48\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 31\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(BuzzwordBoard, \"uhP4jjzICGVDyG0Dy8B0kfal+PE=\");\n_c4 = BuzzwordBoard;\nexport default BuzzwordBoard;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"BoardGrid\");\n$RefreshReg$(_c2, \"Overlay\");\n$RefreshReg$(_c3, \"CongratsMessage\");\n$RefreshReg$(_c4, \"BuzzwordBoard\");","map":{"version":3,"names":["React","useEffect","useState","styled","BuzzwordCell","BingoCelebration","jsxDEV","_jsxDEV","Fragment","_Fragment","BoardGrid","div","props","numcols","_c","Overlay","_ref","show","_c2","CongratsMessage","h2","_c3","BuzzwordBoard","_ref2","_s","numrows","buzzwords","markedCells","handleCellClick","isBingo","setIsBingo","isCenterCell","row","col","Math","floor","isLeftDiagonalCell","isRightDiagonalCell","isRowHighlighted","Array","from","length","_","every","Boolean","isColHighlighted","isDiagonalHighlighted","i","timer","setTimeout","clearTimeout","Header","h1","children","fileName","_jsxFileName","lineNumber","columnNumber","map","buzzword","index","ishighlighted","value","ismarked","onClick","width","height","src","alt","_c4","$RefreshReg$"],"sources":["/Users/ssuresh/Desktop/Bingo/buzzword-bingo/src/pages/BuzzwordBoard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport BuzzwordCell from './BuzzwordCell';\nimport BingoCelebration from '../assets/images/bingo.png';\n\ntype BuzzwordBoardProps = {\n  buzzwords: string[];\n  markedCells: boolean[];\n  handleCellClick: (index: number) => void;\n  numcols: number;\n  numrows: number;\n};\n\n// const BuzzwordBoardContainer = styled.div`\n//   display: flex;\n//   justify-content: center;\n// `;\n\nconst BoardGrid = styled.div<{ numcols: number }>`\n  display: grid;\n  grid-template-columns: repeat(${(props) => props.numcols}, 1fr);\n  // max-width: 500px;\n  margin: 0 auto;\n  text-align: center;\n`;\n\nconst Overlay = styled.div<{ show: boolean }>`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: var(--color-opacility-dark);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 999;\n  opacity: ${({ show }) => (show ? 1 : 0)};\n  transition: opacity 0.5s ease-in-out;\n\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n\n  ${(props) =>\n    !props.show &&\n    `\n    display: none;\n  `}\n`;\n\nconst CongratsMessage = styled.h2`\n  color: var(--color-background);\n  font-size: var(--font-size-mega);\n  text-align: center;\n`;\n\nconst BuzzwordBoard: React.FC<BuzzwordBoardProps> = ({ numcols, numrows, buzzwords, markedCells, handleCellClick }) => {\n  const [isBingo, setIsBingo] = useState(false);\n  const isCenterCell = (row: number, col: number): boolean => row === Math.floor(numrows / 2) && col === Math.floor(numcols / 2);\n\n  const isLeftDiagonalCell = (row: number, col: number): boolean => row === col;\n\n  const isRightDiagonalCell = (row: number, col: number): boolean => row + col === numcols - 1;\n\n  const isRowHighlighted = (row: number): boolean => Array.from({ length: numcols }, (_, col) => markedCells[row * numcols + col]).every(Boolean);\n\n  const isColHighlighted = (col: number): boolean => Array.from({ length: numrows }, (_, row) => markedCells[row * numcols + col]).every(Boolean);\n\n  const isDiagonalHighlighted = (row: number, col: number): boolean => {\n    if (isCenterCell(row, col)) return false;\n\n    if (isLeftDiagonalCell(row, col)) return Array.from({ length: numrows }, (_, i) => markedCells[i * numcols + i]).every(Boolean);\n\n    if (isRightDiagonalCell(row, col)) return Array.from({ length: numrows }, (_, i) => markedCells[i * numcols + (numcols - 1 - i)]).every(Boolean);\n\n    return false;\n  };\n\n  useEffect(() => {\n    if (isBingo) {\n      const timer = setTimeout(() => {\n        setIsBingo(false);\n      }, 2200);\n\n      return () => clearTimeout(timer);\n    }\n  }, [isBingo]);\n\n\n  const Header = styled.h1`\n  font-size: var(--font-size-mega);\n  text-align: center;\n`;\n\n  return (\n    <>              <Header>\n      Buzzword\n      <br />\n      Bingo\n    </Header>\n      <BoardGrid numcols={numcols}>\n        {buzzwords.map((buzzword, index) => {\n          const row = Math.floor(index / numcols);\n          const col = index % numcols;\n          const ishighlighted = isRowHighlighted(row) || isColHighlighted(col) || isDiagonalHighlighted(row, col);\n\n          return (\n            <BuzzwordCell\n              key={index}\n              value={buzzword}\n              ismarked={markedCells[index]}\n              ishighlighted={ishighlighted}\n              onClick={() => handleCellClick(index)}\n              setIsBingo={setIsBingo}\n            />\n          );\n        })}\n      </BoardGrid>\n      <Overlay show={isBingo}><CongratsMessage><img width={220} height={220} src={BingoCelebration} alt='bingo-celebration' /></CongratsMessage></Overlay>\n    </>\n  );\n};\n\nexport default BuzzwordBoard;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}