{"ast":null,"code":"var _jsxFileName = \"/Users/ssuresh/Desktop/Bingo/buzzword-bingo/src/BuzzwordBoard.tsx\";\nimport React from 'react';\nimport BuzzwordCell from './BuzzwordCell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BuzzwordBoard = _ref => {\n  let {\n    buzzwords,\n    markedCells,\n    onCellClick\n  } = _ref;\n  const numRows = 5;\n  const numCols = 5;\n  const isRowHighlighted = rowIndex => {\n    for (let col = 0; col < numCols; col++) {\n      const index = rowIndex * numCols + col;\n      if (!markedCells[index]) {\n        return false;\n      }\n    }\n    return true;\n  };\n  const isColHighlighted = colIndex => {\n    for (let row = 0; row < numRows; row++) {\n      const index = row * numCols + colIndex;\n      if (!markedCells[index]) {\n        return false;\n      }\n    }\n    return true;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"buzzword-board\",\n    children: buzzwords.map((buzzword, index) => {\n      const row = Math.floor(index / numCols);\n      const col = index % numCols;\n      const isHighlighted = isRowHighlighted(row) || isColHighlighted(col);\n      return /*#__PURE__*/_jsxDEV(BuzzwordCell, {\n        value: buzzword,\n        isMarked: markedCells[index],\n        isHighlighted: isHighlighted,\n        onClick: () => onCellClick(index)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_c = BuzzwordBoard;\nexport default BuzzwordBoard;\nvar _c;\n$RefreshReg$(_c, \"BuzzwordBoard\");","map":{"version":3,"names":["React","BuzzwordCell","jsxDEV","_jsxDEV","BuzzwordBoard","_ref","buzzwords","markedCells","onCellClick","numRows","numCols","isRowHighlighted","rowIndex","col","index","isColHighlighted","colIndex","row","className","children","map","buzzword","Math","floor","isHighlighted","value","isMarked","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ssuresh/Desktop/Bingo/buzzword-bingo/src/BuzzwordBoard.tsx"],"sourcesContent":["import React from 'react';\nimport BuzzwordCell from './BuzzwordCell';\n\ntype BuzzwordBoardProps = {\n  buzzwords: string[];\n  markedCells: boolean[];\n  onCellClick: (index: number) => void;\n  isHighlighted: boolean;\n};\n\nconst BuzzwordBoard: React.FC<BuzzwordBoardProps> = ({\n  buzzwords,\n  markedCells,\n  onCellClick,\n}) => {\n  const numRows = 5;\n  const numCols = 5;\n\n  const isRowHighlighted = (rowIndex: number) => {\n    for (let col = 0; col < numCols; col++) {\n      const index = rowIndex * numCols + col;\n      if (!markedCells[index]) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  const isColHighlighted = (colIndex: number) => {\n    for (let row = 0; row < numRows; row++) {\n      const index = row * numCols + colIndex;\n      if (!markedCells[index]) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  return (\n    <div className=\"buzzword-board\">\n      {buzzwords.map((buzzword, index) => {\n        const row = Math.floor(index / numCols);\n        const col = index % numCols;\n        const isHighlighted = isRowHighlighted(row) || isColHighlighted(col);\n\n        return (\n          <BuzzwordCell\n            key={index}\n            value={buzzword}\n            isMarked={markedCells[index]}\n            isHighlighted={isHighlighted}\n            onClick={() => onCellClick(index)}\n          />\n        );\n      })}\n    </div>\n  );\n};\n\nexport default BuzzwordBoard;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,YAAY,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAS1C,MAAMC,aAA2C,GAAGC,IAAA,IAI9C;EAAA,IAJ+C;IACnDC,SAAS;IACTC,WAAW;IACXC;EACF,CAAC,GAAAH,IAAA;EACC,MAAMI,OAAO,GAAG,CAAC;EACjB,MAAMC,OAAO,GAAG,CAAC;EAEjB,MAAMC,gBAAgB,GAAIC,QAAgB,IAAK;IAC7C,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGH,OAAO,EAAEG,GAAG,EAAE,EAAE;MACtC,MAAMC,KAAK,GAAGF,QAAQ,GAAGF,OAAO,GAAGG,GAAG;MACtC,IAAI,CAACN,WAAW,CAACO,KAAK,CAAC,EAAE;QACvB,OAAO,KAAK;MACd;IACF;IACA,OAAO,IAAI;EACb,CAAC;EAED,MAAMC,gBAAgB,GAAIC,QAAgB,IAAK;IAC7C,KAAK,IAAIC,GAAG,GAAG,CAAC,EAAEA,GAAG,GAAGR,OAAO,EAAEQ,GAAG,EAAE,EAAE;MACtC,MAAMH,KAAK,GAAGG,GAAG,GAAGP,OAAO,GAAGM,QAAQ;MACtC,IAAI,CAACT,WAAW,CAACO,KAAK,CAAC,EAAE;QACvB,OAAO,KAAK;MACd;IACF;IACA,OAAO,IAAI;EACb,CAAC;EAED,oBACEX,OAAA;IAAKe,SAAS,EAAC,gBAAgB;IAAAC,QAAA,EAC5Bb,SAAS,CAACc,GAAG,CAAC,CAACC,QAAQ,EAAEP,KAAK,KAAK;MAClC,MAAMG,GAAG,GAAGK,IAAI,CAACC,KAAK,CAACT,KAAK,GAAGJ,OAAO,CAAC;MACvC,MAAMG,GAAG,GAAGC,KAAK,GAAGJ,OAAO;MAC3B,MAAMc,aAAa,GAAGb,gBAAgB,CAACM,GAAG,CAAC,IAAIF,gBAAgB,CAACF,GAAG,CAAC;MAEpE,oBACEV,OAAA,CAACF,YAAY;QAEXwB,KAAK,EAAEJ,QAAS;QAChBK,QAAQ,EAAEnB,WAAW,CAACO,KAAK,CAAE;QAC7BU,aAAa,EAAEA,aAAc;QAC7BG,OAAO,EAAEA,CAAA,KAAMnB,WAAW,CAACM,KAAK;MAAE,GAJ7BA,KAAK;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKX,CAAC;IAEN,CAAC;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACC,EAAA,GA/CI5B,aAA2C;AAiDjD,eAAeA,aAAa;AAAC,IAAA4B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}