{"ast":null,"code":"var _jsxFileName = \"/Users/ssuresh/Desktop/Bingo/bingo/src/pages/Bingo.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport Board from './Board';\nimport styled from 'styled-components';\nimport Button from '../components/Button/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MainContainer = styled.div`\n    display: flex;\n    width: 100vw;\n    height: 100vh;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    background: linear-gradient(to left, var(--color-primary), var(--color-background));\n`;\n_c = MainContainer;\nconst Header = styled.h1`\n  font-size: var(--font-size-mega);\n  text-align: center;\n\n  @media (min-width:320px) and (max-width: 641px) {\n    font-size: var(--font-size-xl);\n  }\n`;\n_c2 = Header;\nconst BoardContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    button {\n        margin-top: 20px;\n    }\n`;\n_c3 = BoardContainer;\nconst Bingo = _ref => {\n  _s();\n  let {\n    buzzwords,\n    numrows,\n    numcols\n  } = _ref;\n  const [markedCells, setMarkedCells] = useState(new Array(25).fill(false));\n  const handleCellClick = index => {\n    if (markedCells[index]) return;\n    setMarkedCells(prev => [...prev.slice(0, index), true, ...prev.slice(index + 1)]);\n  };\n  const handleReset = () => {\n    const centerIndex = Math.floor(markedCells.length / 2);\n    const newMarkedCells = markedCells.map((cell, index) => index === centerIndex ? true : false);\n    setMarkedCells(newMarkedCells);\n  };\n  useEffect(() => {\n    setMarkedCells(prevMarkedCells => {\n      const newMarkedCells = [...prevMarkedCells];\n      const centerCellIndex = Math.floor(numrows * numcols / 2);\n      newMarkedCells[centerCellIndex] = true;\n      return newMarkedCells;\n    });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/_jsxDEV(MainContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: [\"Buzzword\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), \"Bingo\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(BoardContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Board, {\n        buzzwords: buzzwords,\n        markedCells: markedCells,\n        handleCellClick: handleCellClick,\n        numcols: numcols,\n        numrows: numrows\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        onClick: handleReset,\n        children: \"Reset\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n};\n_s(Bingo, \"m1/8K7UgLijv4Fr0owXetK+IAsg=\");\n_c4 = Bingo;\nexport default Bingo;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"MainContainer\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"BoardContainer\");\n$RefreshReg$(_c4, \"Bingo\");","map":{"version":3,"names":["React","useEffect","useState","Board","styled","Button","jsxDEV","_jsxDEV","MainContainer","div","_c","Header","h1","_c2","BoardContainer","_c3","Bingo","_ref","_s","buzzwords","numrows","numcols","markedCells","setMarkedCells","Array","fill","handleCellClick","index","prev","slice","handleReset","centerIndex","Math","floor","length","newMarkedCells","map","cell","prevMarkedCells","centerCellIndex","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c4","$RefreshReg$"],"sources":["/Users/ssuresh/Desktop/Bingo/bingo/src/pages/Bingo.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Board from './Board';\nimport styled from 'styled-components';\nimport Button from '../components/Button/Button';\n\ninterface BingoProps {\n    buzzwords: Array<string>,\n    numrows: number,\n    numcols: number,\n}\n\nconst MainContainer = styled.div`\n    display: flex;\n    width: 100vw;\n    height: 100vh;\n    flex-direction: column;\n    align-items: center;\n    justify-content: center;\n    background: linear-gradient(to left, var(--color-primary), var(--color-background));\n`;\n\nconst Header = styled.h1`\n  font-size: var(--font-size-mega);\n  text-align: center;\n\n  @media (min-width:320px) and (max-width: 641px) {\n    font-size: var(--font-size-xl);\n  }\n`;\n\nconst BoardContainer = styled.div`\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n\n    button {\n        margin-top: 20px;\n    }\n`;\n\nconst Bingo: React.FC<BingoProps> = ({\n    buzzwords,\n    numrows,\n    numcols,\n}) => {\n    const [markedCells, setMarkedCells] = useState<boolean[]>(new Array(25).fill(false));\n    const handleCellClick = (index: number) => {\n        if (markedCells[index]) return;\n\n        setMarkedCells(prev => [...prev.slice(0, index), true, ...prev.slice(index + 1)]);\n    };\n\n    const handleReset = () => {\n        const centerIndex = Math.floor(markedCells.length / 2);\n        const newMarkedCells = markedCells.map((cell, index) => (index === centerIndex ? true : false));\n        setMarkedCells(newMarkedCells);\n    }\n\n    useEffect(() => {\n        setMarkedCells((prevMarkedCells) => {\n            const newMarkedCells = [...prevMarkedCells];\n            const centerCellIndex = Math.floor((numrows * numcols) / 2);\n            newMarkedCells[centerCellIndex] = true;\n            return newMarkedCells;\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n\n    return (\n        <MainContainer>\n            <Header>\n                Buzzword\n                <br />\n                Bingo\n            </Header>\n            <BoardContainer>\n                <Board\n                    buzzwords={buzzwords}\n                    markedCells={markedCells}\n                    handleCellClick={handleCellClick}\n                    numcols={numcols}\n                    numrows={numrows}\n                />\n                <Button onClick={handleReset}>Reset</Button>\n            </BoardContainer>\n        </MainContainer>\n    );\n};\n\n\nexport default Bingo;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,SAAS;AAC3B,OAAOC,MAAM,MAAM,mBAAmB;AACtC,OAAOC,MAAM,MAAM,6BAA6B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAQjD,MAAMC,aAAa,GAAGJ,MAAM,CAACK,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,EAAA,GARIF,aAAa;AAUnB,MAAMG,MAAM,GAAGP,MAAM,CAACQ,EAAG;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACC,GAAA,GAPIF,MAAM;AASZ,MAAMG,cAAc,GAAGV,MAAM,CAACK,GAAI;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AAACM,GAAA,GATID,cAAc;AAWpB,MAAME,KAA2B,GAAGC,IAAA,IAI9B;EAAAC,EAAA;EAAA,IAJ+B;IACjCC,SAAS;IACTC,OAAO;IACPC;EACJ,CAAC,GAAAJ,IAAA;EACG,MAAM,CAACK,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAY,IAAIsB,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC,CAAC;EACpF,MAAMC,eAAe,GAAIC,KAAa,IAAK;IACvC,IAAIL,WAAW,CAACK,KAAK,CAAC,EAAE;IAExBJ,cAAc,CAACK,IAAI,IAAI,CAAC,GAAGA,IAAI,CAACC,KAAK,CAAC,CAAC,EAAEF,KAAK,CAAC,EAAE,IAAI,EAAE,GAAGC,IAAI,CAACC,KAAK,CAACF,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC;EACrF,CAAC;EAED,MAAMG,WAAW,GAAGA,CAAA,KAAM;IACtB,MAAMC,WAAW,GAAGC,IAAI,CAACC,KAAK,CAACX,WAAW,CAACY,MAAM,GAAG,CAAC,CAAC;IACtD,MAAMC,cAAc,GAAGb,WAAW,CAACc,GAAG,CAAC,CAACC,IAAI,EAAEV,KAAK,KAAMA,KAAK,KAAKI,WAAW,GAAG,IAAI,GAAG,KAAM,CAAC;IAC/FR,cAAc,CAACY,cAAc,CAAC;EAClC,CAAC;EAEDlC,SAAS,CAAC,MAAM;IACZsB,cAAc,CAAEe,eAAe,IAAK;MAChC,MAAMH,cAAc,GAAG,CAAC,GAAGG,eAAe,CAAC;MAC3C,MAAMC,eAAe,GAAGP,IAAI,CAACC,KAAK,CAAEb,OAAO,GAAGC,OAAO,GAAI,CAAC,CAAC;MAC3Dc,cAAc,CAACI,eAAe,CAAC,GAAG,IAAI;MACtC,OAAOJ,cAAc;IACzB,CAAC,CAAC;IACF;EACJ,CAAC,EAAE,EAAE,CAAC;EAGN,oBACI5B,OAAA,CAACC,aAAa;IAAAgC,QAAA,gBACVjC,OAAA,CAACI,MAAM;MAAA6B,QAAA,GAAC,UAEJ,eAAAjC,OAAA;QAAAkC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,SAEV;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTrC,OAAA,CAACO,cAAc;MAAA0B,QAAA,gBACXjC,OAAA,CAACJ,KAAK;QACFgB,SAAS,EAAEA,SAAU;QACrBG,WAAW,EAAEA,WAAY;QACzBI,eAAe,EAAEA,eAAgB;QACjCL,OAAO,EAAEA,OAAQ;QACjBD,OAAO,EAAEA;MAAQ;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpB,CAAC,eACFrC,OAAA,CAACF,MAAM;QAACwC,OAAO,EAAEf,WAAY;QAAAU,QAAA,EAAC;MAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAExB,CAAC;AAAC1B,EAAA,CAhDIF,KAA2B;AAAA8B,GAAA,GAA3B9B,KAA2B;AAmDjC,eAAeA,KAAK;AAAC,IAAAN,EAAA,EAAAG,GAAA,EAAAE,GAAA,EAAA+B,GAAA;AAAAC,YAAA,CAAArC,EAAA;AAAAqC,YAAA,CAAAlC,GAAA;AAAAkC,YAAA,CAAAhC,GAAA;AAAAgC,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}