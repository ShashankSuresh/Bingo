{"ast":null,"code":"var _jsxFileName = \"/Users/ssuresh/Desktop/Bingo/buzzword-bingo/src/BuzzwordBoard.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport BuzzwordCell from './BuzzwordCell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BingoCard = styled.div`\nbackground-color: rgb(118 25 119);\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgb(118 25 119);\n    padding: 16px;\n    max-width: 650px;\n    margin: 0 auto;\n`;\n_c = BingoCard;\nconst BuzzwordBoardContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n_c2 = BuzzwordBoardContainer;\nconst BoardGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => props.numcols}, 1fr);\n  grid-gap: 10px;\n  max-width: 500px;\n  margin: 0 auto;\n`;\n_c3 = BoardGrid;\nconst BuzzwordBoard = _ref => {\n  let {\n    numcols,\n    numrows,\n    buzzwords,\n    markedCells,\n    handleCellClick\n  } = _ref;\n  const isCenterCell = (row, col) => {\n    return row === Math.floor(numrows / 2) && col === Math.floor(numcols / 2);\n  };\n  const isLeftDiagonalCell = (row, col) => {\n    return row === col;\n  };\n  const isRightDiagonalCell = (row, col) => {\n    return row + col === numcols - 1;\n  };\n  const isRowHighlighted = row => {\n    for (let col = 0; col < numcols; col++) {\n      if (!markedCells[row * numcols + col]) {\n        return false;\n      }\n    }\n    return true;\n  };\n  const isColHighlighted = col => {\n    for (let row = 0; row < numrows; row++) {\n      if (!markedCells[row * numcols + col]) {\n        return false;\n      }\n    }\n    return true;\n  };\n  const isDiagonalHighlighted = (row, col) => {\n    if (isCenterCell(row, col)) {\n      return false;\n    }\n    if (isLeftDiagonalCell(row, col)) {\n      for (let i = 0; i < numrows; i++) {\n        if (!markedCells[i * numcols + i]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    if (isRightDiagonalCell(row, col)) {\n      for (let i = 0; i < numrows; i++) {\n        if (!markedCells[i * numcols + (numcols - 1 - i)]) {\n          return false;\n        }\n      }\n      return true;\n    }\n    return false;\n  };\n  return /*#__PURE__*/_jsxDEV(BingoCard, {\n    children: /*#__PURE__*/_jsxDEV(BuzzwordBoardContainer, {\n      children: /*#__PURE__*/_jsxDEV(BoardGrid, {\n        numcols: numcols,\n        children: buzzwords.map((buzzword, index) => {\n          const row = Math.floor(index / numcols);\n          const col = index % numcols;\n          const ishighlighted = isRowHighlighted(row) || isColHighlighted(col) || isDiagonalHighlighted(row, col);\n          return /*#__PURE__*/_jsxDEV(BuzzwordCell, {\n            value: buzzword,\n            ismarked: markedCells[index],\n            ishighlighted: ishighlighted,\n            onClick: () => handleCellClick(index)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n_c4 = BuzzwordBoard;\nexport default BuzzwordBoard;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"BingoCard\");\n$RefreshReg$(_c2, \"BuzzwordBoardContainer\");\n$RefreshReg$(_c3, \"BoardGrid\");\n$RefreshReg$(_c4, \"BuzzwordBoard\");","map":{"version":3,"names":["React","styled","BuzzwordCell","jsxDEV","_jsxDEV","BingoCard","div","_c","BuzzwordBoardContainer","_c2","BoardGrid","props","numcols","_c3","BuzzwordBoard","_ref","numrows","buzzwords","markedCells","handleCellClick","isCenterCell","row","col","Math","floor","isLeftDiagonalCell","isRightDiagonalCell","isRowHighlighted","isColHighlighted","isDiagonalHighlighted","i","children","map","buzzword","index","ishighlighted","value","ismarked","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c4","$RefreshReg$"],"sources":["/Users/ssuresh/Desktop/Bingo/buzzword-bingo/src/BuzzwordBoard.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\nimport BuzzwordCell from './BuzzwordCell';\n\ntype BuzzwordBoardProps = {\n    buzzwords: string[];\n    markedCells: boolean[];\n    handleCellClick: (index: number) => void;\n    numcols: number;\n    numrows: number;\n};\n\nconst BingoCard = styled.div`\nbackground-color: rgb(118 25 119);\n    border-radius: 8px;\n    box-shadow: 0 2px 4px rgb(118 25 119);\n    padding: 16px;\n    max-width: 650px;\n    margin: 0 auto;\n`;\n\nconst BuzzwordBoardContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst BoardGrid = styled.div<{ numcols: number }>`\n  display: grid;\n  grid-template-columns: repeat(${(props) => props.numcols}, 1fr);\n  grid-gap: 10px;\n  max-width: 500px;\n  margin: 0 auto;\n`;\n\n\nconst BuzzwordBoard: React.FC<BuzzwordBoardProps> = ({ numcols, numrows, buzzwords, markedCells, handleCellClick }) => {\n    const isCenterCell = (row: number, col: number): boolean => {\n        return row === Math.floor(numrows / 2) && col === Math.floor(numcols / 2);\n    };\n\n    const isLeftDiagonalCell = (row: number, col: number): boolean => {\n        return row === col;\n    };\n\n    const isRightDiagonalCell = (row: number, col: number): boolean => {\n        return row + col === numcols - 1;\n    };\n\n    const isRowHighlighted = (row: number): boolean => {\n        for (let col = 0; col < numcols; col++) {\n            if (!markedCells[row * numcols + col]) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    const isColHighlighted = (col: number): boolean => {\n        for (let row = 0; row < numrows; row++) {\n            if (!markedCells[row * numcols + col]) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    const isDiagonalHighlighted = (row: number, col: number): boolean => {\n        if (isCenterCell(row, col)) {\n            return false;\n        }\n\n        if (isLeftDiagonalCell(row, col)) {\n            for (let i = 0; i < numrows; i++) {\n                if (!markedCells[i * numcols + i]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n\n        if (isRightDiagonalCell(row, col)) {\n            for (let i = 0; i < numrows; i++) {\n                if (!markedCells[i * numcols + (numcols - 1 - i)]) {\n                    return false;\n                }\n            }\n            return true;\n        }\n\n        return false;\n    };\n\n    return (\n        <BingoCard>\n            <BuzzwordBoardContainer>\n                <BoardGrid numcols={numcols}>\n                    {buzzwords.map((buzzword, index) => {\n                        const row = Math.floor(index / numcols);\n                        const col = index % numcols;\n                        const ishighlighted = isRowHighlighted(row) || isColHighlighted(col) || isDiagonalHighlighted(row, col);\n\n                        return (\n                            <BuzzwordCell\n                                key={index}\n                                value={buzzword}\n                                ismarked={markedCells[index]}\n                                ishighlighted={ishighlighted}\n                                onClick={() => handleCellClick(index)}\n                            />\n                        );\n                    })}\n                </BoardGrid>\n            </BuzzwordBoardContainer>\n        </BingoCard>\n    );\n};\n\nexport default BuzzwordBoard;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}