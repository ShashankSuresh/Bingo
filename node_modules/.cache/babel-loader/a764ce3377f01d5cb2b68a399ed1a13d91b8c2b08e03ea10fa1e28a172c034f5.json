{"ast":null,"code":"var _jsxFileName = \"/Users/ssuresh/Desktop/Bingo/buzzword-bingo/src/BuzzwordBoard.tsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nimport BuzzwordCell from './BuzzwordCell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BuzzwordBoardContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n_c = BuzzwordBoardContainer;\nconst BoardGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => props.numCols}, 1fr);\n  grid-gap: 10px;\n  max-width: 500px;\n  margin: 0 auto;\n`;\n_c2 = BoardGrid;\nconst BuzzwordBoard = _ref => {\n  let {\n    buzzwords,\n    markedCells,\n    onCellClick\n  } = _ref;\n  const numCols = 5; // Modify this value to change the number of columns\n  const numRows = Math.ceil(buzzwords.length / numCols);\n  const isRowHighlighted = rowIndex => {\n    for (let col = 0; col < numCols; col++) {\n      const index = rowIndex * numCols + col;\n      if (!markedCells[index]) {\n        return false;\n      }\n    }\n    return true;\n  };\n  const isColHighlighted = colIndex => {\n    for (let row = 0; row < numRows; row++) {\n      const index = row * numCols + colIndex;\n      if (!markedCells[index]) {\n        return false;\n      }\n    }\n    return true;\n  };\n  const isDiagonalHighlighted = () => {\n    const leftDiagonal = [];\n    const rightDiagonal = [];\n    for (let i = 0; i < numRows; i++) {\n      leftDiagonal.push(i * (numCols + 1));\n      rightDiagonal.push((i + 1) * (numCols - 1));\n    }\n    const isLeftDiagonalMarked = leftDiagonal.every(index => markedCells[index]);\n    const isRightDiagonalMarked = rightDiagonal.every(index => markedCells[index]);\n    return isLeftDiagonalMarked || isRightDiagonalMarked;\n  };\n  const isBingo = () => {\n    // Check rows\n    for (let row = 0; row < numRows; row++) {\n      if (isRowHighlighted(row)) {\n        return true;\n      }\n    }\n\n    // Check columns\n    for (let col = 0; col < numCols; col++) {\n      if (isColHighlighted(col)) {\n        return true;\n      }\n    }\n\n    // Check diagonals\n    if (isDiagonalHighlighted()) {\n      return true;\n    }\n    return false;\n  };\n  const handleCellClick = index => {\n    onCellClick(index);\n    if (isBingo()) {\n      // Bingo achieved!\n      console.log('Bingo!');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(BuzzwordBoardContainer, {\n    children: /*#__PURE__*/_jsxDEV(BoardGrid, {\n      numCols: numCols,\n      children: buzzwords.map((buzzword, index) => {\n        const row = Math.floor(index / numCols);\n        const col = index % numCols;\n        const isHighlighted = isRowHighlighted(row) || isColHighlighted(col);\n        return /*#__PURE__*/_jsxDEV(BuzzwordCell, {\n          value: buzzword,\n          isMarked: markedCells[index],\n          isHighlighted: isHighlighted,\n          onClick: () => handleCellClick(index)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_c3 = BuzzwordBoard;\nexport default BuzzwordBoard;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"BuzzwordBoardContainer\");\n$RefreshReg$(_c2, \"BoardGrid\");\n$RefreshReg$(_c3, \"BuzzwordBoard\");","map":{"version":3,"names":["React","styled","BuzzwordCell","jsxDEV","_jsxDEV","BuzzwordBoardContainer","div","_c","BoardGrid","props","numCols","_c2","BuzzwordBoard","_ref","buzzwords","markedCells","onCellClick","numRows","Math","ceil","length","isRowHighlighted","rowIndex","col","index","isColHighlighted","colIndex","row","isDiagonalHighlighted","leftDiagonal","rightDiagonal","i","push","isLeftDiagonalMarked","every","isRightDiagonalMarked","isBingo","handleCellClick","console","log","children","map","buzzword","floor","isHighlighted","value","isMarked","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c3","$RefreshReg$"],"sources":["/Users/ssuresh/Desktop/Bingo/buzzword-bingo/src/BuzzwordBoard.tsx"],"sourcesContent":["import React from 'react';\nimport styled, { css } from 'styled-components';\nimport BuzzwordCell from './BuzzwordCell';\n\ntype BuzzwordBoardProps = {\n  buzzwords: string[];\n  markedCells: boolean[];\n  onCellClick: (index: number) => void;\n};\n\nconst BuzzwordBoardContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst BoardGrid = styled.div<{ numCols: number }>`\n  display: grid;\n  grid-template-columns: repeat(${(props) => props.numCols}, 1fr);\n  grid-gap: 10px;\n  max-width: 500px;\n  margin: 0 auto;\n`;\n\nconst BuzzwordBoard: React.FC<BuzzwordBoardProps> = ({\n  buzzwords,\n  markedCells,\n  onCellClick,\n}) => {\n  const numCols = 5; // Modify this value to change the number of columns\n  const numRows = Math.ceil(buzzwords.length / numCols);\n\n  const isRowHighlighted = (rowIndex: number) => {\n    for (let col = 0; col < numCols; col++) {\n      const index = rowIndex * numCols + col;\n      if (!markedCells[index]) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  const isColHighlighted = (colIndex: number) => {\n    for (let row = 0; row < numRows; row++) {\n      const index = row * numCols + colIndex;\n      if (!markedCells[index]) {\n        return false;\n      }\n    }\n    return true;\n  };\n\n  const isDiagonalHighlighted = () => {\n    const leftDiagonal = [];\n    const rightDiagonal = [];\n\n    for (let i = 0; i < numRows; i++) {\n      leftDiagonal.push(i * (numCols + 1));\n      rightDiagonal.push((i + 1) * (numCols - 1));\n    }\n\n    const isLeftDiagonalMarked = leftDiagonal.every(\n      (index) => markedCells[index]\n    );\n    const isRightDiagonalMarked = rightDiagonal.every(\n      (index) => markedCells[index]\n    );\n\n    return isLeftDiagonalMarked || isRightDiagonalMarked;\n  };\n\n  const isBingo = () => {\n    // Check rows\n    for (let row = 0; row < numRows; row++) {\n      if (isRowHighlighted(row)) {\n        return true;\n      }\n    }\n\n    // Check columns\n    for (let col = 0; col < numCols; col++) {\n      if (isColHighlighted(col)) {\n        return true;\n      }\n    }\n\n    // Check diagonals\n    if (isDiagonalHighlighted()) {\n      return true;\n    }\n\n    return false;\n  };\n\n  const handleCellClick = (index: number) => {\n    onCellClick(index);\n\n    if (isBingo()) {\n      // Bingo achieved!\n      console.log('Bingo!');\n    }\n  };\n\n  return (\n    <BuzzwordBoardContainer>\n      <BoardGrid numCols={numCols}>\n        {buzzwords.map((buzzword, index) => {\n          const row = Math.floor(index / numCols);\n          const col = index % numCols;\n          const isHighlighted = isRowHighlighted(row) || isColHighlighted(col);\n\n          return (\n            <BuzzwordCell\n              key={index}\n              value={buzzword}\n              isMarked={markedCells[index]}\n              isHighlighted={isHighlighted}\n              onClick={() => handleCellClick(index)}\n            />\n          );\n        })}\n      </BoardGrid>\n    </BuzzwordBoardContainer>\n  );\n};\n\nexport default BuzzwordBoard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}