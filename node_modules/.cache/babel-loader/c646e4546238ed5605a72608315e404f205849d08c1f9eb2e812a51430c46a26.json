{"ast":null,"code":"var _jsxFileName = \"/Users/ssuresh/Desktop/Bingo/buzzword-bingo/src/BuzzwordBoard.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport BuzzwordCell from './BuzzwordCell';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BuzzwordBoardContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n_c = BuzzwordBoardContainer;\nconst BoardGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(${props => props.numcols}, 1fr);\n  max-width: 500px;\n  margin: 0 auto;\n  text-align: center;\n`;\n_c2 = BoardGrid;\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.8);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 999;\n  animation: fadeIn 2s ease-in-out forwards;\n\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n\n  ${props => !props.show && `\n    display: none;\n  `}\n`;\n_c3 = Overlay;\nconst CongratsMessage = styled.h2`\n  color: #fff;\n  font-size: 24px;\n  text-align: center;\n`;\n_c4 = CongratsMessage;\nconst BuzzwordBoard = _ref => {\n  _s();\n  let {\n    numcols,\n    numrows,\n    buzzwords,\n    markedCells,\n    handleCellClick\n  } = _ref;\n  const [isBingo, setIsBingo] = useState(false);\n  const isCenterCell = (row, col) => row === Math.floor(numrows / 2) && col === Math.floor(numcols / 2);\n  const isLeftDiagonalCell = (row, col) => row === col;\n  const isRightDiagonalCell = (row, col) => row + col === numcols - 1;\n  const isRowHighlighted = row => Array.from({\n    length: numcols\n  }, (_, col) => markedCells[row * numcols + col]).every(Boolean);\n  const isColHighlighted = col => Array.from({\n    length: numrows\n  }, (_, row) => markedCells[row * numcols + col]).every(Boolean);\n  const isDiagonalHighlighted = (row, col) => {\n    if (isCenterCell(row, col)) return false;\n    if (isLeftDiagonalCell(row, col)) return Array.from({\n      length: numrows\n    }, (_, i) => markedCells[i * numcols + i]).every(Boolean);\n    if (isRightDiagonalCell(row, col)) return Array.from({\n      length: numrows\n    }, (_, i) => markedCells[i * numcols + (numcols - 1 - i)]).every(Boolean);\n    return false;\n  };\n  useEffect(() => {\n    if (isBingo) {\n      const timer = setTimeout(() => {\n        setIsBingo(false);\n      }, 3000);\n      return () => clearTimeout(timer);\n    }\n  }, [isBingo]);\n  return /*#__PURE__*/_jsxDEV(BuzzwordBoardContainer, {\n    children: [/*#__PURE__*/_jsxDEV(BoardGrid, {\n      numcols: numcols,\n      children: buzzwords.map((buzzword, index) => {\n        const row = Math.floor(index / numcols);\n        const col = index % numcols;\n        const ishighlighted = isRowHighlighted(row) || isColHighlighted(col) || isDiagonalHighlighted(row, col);\n        return /*#__PURE__*/_jsxDEV(BuzzwordCell, {\n          value: buzzword,\n          ismarked: markedCells[index],\n          ishighlighted: ishighlighted,\n          onClick: () => handleCellClick(index),\n          setIsBingo: setIsBingo\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Overlay, {\n      show: isBingo,\n      children: /*#__PURE__*/_jsxDEV(CongratsMessage, {\n        children: \"Bingoo!!!!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 37\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 9\n  }, this);\n};\n_s(BuzzwordBoard, \"uhP4jjzICGVDyG0Dy8B0kfal+PE=\");\n_c5 = BuzzwordBoard;\nexport default BuzzwordBoard;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"BuzzwordBoardContainer\");\n$RefreshReg$(_c2, \"BoardGrid\");\n$RefreshReg$(_c3, \"Overlay\");\n$RefreshReg$(_c4, \"CongratsMessage\");\n$RefreshReg$(_c5, \"BuzzwordBoard\");","map":{"version":3,"names":["React","useEffect","useState","styled","BuzzwordCell","jsxDEV","_jsxDEV","BuzzwordBoardContainer","div","_c","BoardGrid","props","numcols","_c2","Overlay","show","_c3","CongratsMessage","h2","_c4","BuzzwordBoard","_ref","_s","numrows","buzzwords","markedCells","handleCellClick","isBingo","setIsBingo","isCenterCell","row","col","Math","floor","isLeftDiagonalCell","isRightDiagonalCell","isRowHighlighted","Array","from","length","_","every","Boolean","isColHighlighted","isDiagonalHighlighted","i","timer","setTimeout","clearTimeout","children","map","buzzword","index","ishighlighted","value","ismarked","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c5","$RefreshReg$"],"sources":["/Users/ssuresh/Desktop/Bingo/buzzword-bingo/src/BuzzwordBoard.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport styled from 'styled-components';\nimport BuzzwordCell from './BuzzwordCell';\n\ntype BuzzwordBoardProps = {\n    buzzwords: string[];\n    markedCells: boolean[];\n    handleCellClick: (index: number) => void;\n    numcols: number;\n    numrows: number;\n};\n\nconst BuzzwordBoardContainer = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst BoardGrid = styled.div<{ numcols: number }>`\n  display: grid;\n  grid-template-columns: repeat(${(props) => props.numcols}, 1fr);\n  max-width: 500px;\n  margin: 0 auto;\n  text-align: center;\n`;\n\nconst Overlay = styled.div<{ show: boolean }>`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.8);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  z-index: 999;\n  animation: fadeIn 2s ease-in-out forwards;\n\n  @keyframes fadeIn {\n    from {\n      opacity: 0;\n    }\n    to {\n      opacity: 1;\n    }\n  }\n\n  ${(props) =>\n        !props.show &&\n        `\n    display: none;\n  `}\n`;\n\nconst CongratsMessage = styled.h2`\n  color: #fff;\n  font-size: 24px;\n  text-align: center;\n`;\n\nconst BuzzwordBoard: React.FC<BuzzwordBoardProps> = ({ numcols, numrows, buzzwords, markedCells, handleCellClick }) => {\n    const [isBingo, setIsBingo] = useState(false);\n    const isCenterCell = (row: number, col: number): boolean => row === Math.floor(numrows / 2) && col === Math.floor(numcols / 2);\n\n    const isLeftDiagonalCell = (row: number, col: number): boolean => row === col;\n\n    const isRightDiagonalCell = (row: number, col: number): boolean => row + col === numcols - 1;\n\n    const isRowHighlighted = (row: number): boolean => Array.from({ length: numcols }, (_, col) => markedCells[row * numcols + col]).every(Boolean);\n\n    const isColHighlighted = (col: number): boolean => Array.from({ length: numrows }, (_, row) => markedCells[row * numcols + col]).every(Boolean);\n\n    const isDiagonalHighlighted = (row: number, col: number): boolean => {\n        if (isCenterCell(row, col)) return false;\n\n        if (isLeftDiagonalCell(row, col)) return Array.from({ length: numrows }, (_, i) => markedCells[i * numcols + i]).every(Boolean);\n\n        if (isRightDiagonalCell(row, col)) return Array.from({ length: numrows }, (_, i) => markedCells[i * numcols + (numcols - 1 - i)]).every(Boolean);\n\n        return false;\n    };\n\n    useEffect(() => {\n        if (isBingo) {\n            const timer = setTimeout(() => {\n                setIsBingo(false);\n            }, 3000);\n\n            return () => clearTimeout(timer);\n        }\n    }, [isBingo]);\n\n    return (\n        <BuzzwordBoardContainer>\n            <BoardGrid numcols={numcols}>\n                {buzzwords.map((buzzword, index) => {\n                    const row = Math.floor(index / numcols);\n                    const col = index % numcols;\n                    const ishighlighted = isRowHighlighted(row) || isColHighlighted(col) || isDiagonalHighlighted(row, col);\n\n                    return (\n                        <BuzzwordCell\n                            key={index}\n                            value={buzzword}\n                            ismarked={markedCells[index]}\n                            ishighlighted={ishighlighted}\n                            onClick={() => handleCellClick(index)}\n                            setIsBingo={setIsBingo}\n                        />\n                    );\n                })}\n            </BoardGrid>\n            <Overlay show={isBingo}><CongratsMessage>Bingoo!!!!</CongratsMessage></Overlay>\n        </BuzzwordBoardContainer>\n    );\n};\n\nexport default BuzzwordBoard;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}